steps = build
dest = /perm/rd/pas/scm/43r3/scm-43r3.ref-upd
build.prop{ar, class} = ar
build.prop{ar.flags, class} = rs
build.prop{cc, class} = gcc
build.prop{cc.defs, class} = 
build.prop{cc.flag-compile, class} = -c
build.prop{cc.flag-define, class} = -D%s
build.prop{cc.flag-include, class} = -I%s
build.prop{cc.flag-lib, class} = -l%s
build.prop{cc.flag-lib-path, class} = -L%s
build.prop{cc.flag-omp, class} = 
build.prop{cc.flag-output, class} = -o%s
build.prop{cc.flags, class} = 
build.prop{cc.flags-ld, class} = 
build.prop{cc.include-paths, class} = 
build.prop{cc.lib-paths, class} = 
build.prop{cc.libs, class} = 
build.prop{class, cxx} = g++
build.prop{class, cxx.defs} = 
build.prop{class, cxx.flag-compile} = -c
build.prop{class, cxx.flag-define} = -D%s
build.prop{class, cxx.flag-include} = -I%s
build.prop{class, cxx.flag-lib} = -l%s
build.prop{class, cxx.flag-lib-path} = -L%s
build.prop{class, cxx.flag-omp} = 
build.prop{class, cxx.flag-output} = -o%s
build.prop{class, cxx.flags} = 
build.prop{class, cxx.flags-ld} = 
build.prop{class, cxx.include-paths} = 
build.prop{class, cxx.lib-paths} = 
build.prop{class, cxx.libs} = 
build.prop{class, dep.bin} = 
build.prop{class, dep.f.module} = 
build.prop{class, dep.include} = 
build.prop{class, dep.o} = 
build.prop{class, dep.o.special} = 
build.prop{class, fc} = gfortran
build.prop{class, fc.defs} = 
build.prop{class, fc.flag-compile} = -c
build.prop{class, fc.flag-define} = -D%s
build.prop{class, fc.flag-include} = -I%s
build.prop{class, fc.flag-lib} = -l%s
build.prop{class, fc.flag-lib-path} = -L%s
build.prop{class, fc.flag-module} = 
build.prop{class, fc.flag-omp} = 
build.prop{class, fc.flag-output} = -o%s
build.prop{class, fc.flags} = 
build.prop{class, fc.flags-ld} = 
build.prop{class, fc.include-paths} = 
build.prop{class, fc.lib-paths} = 
build.prop{class, fc.libs} = 
build.prop{class, file-ext.a} = .a
build.prop{class, file-ext.bin} = .exe
build.prop{class, file-ext.c} = .c .i .m .mi
build.prop{class, file-ext.cxx} = .cc .cp .cxx .cpp .CPP .c++ .C .mm .M .mii
build.prop{class, file-ext.etc} = .etc
build.prop{class, file-ext.f90-interface} = .interface
build.prop{class, file-ext.f90-mod} = .mod
build.prop{class, file-ext.fortran} = .F .F90 .F95 .FOR .FTN .f .f90 .f95 .for .ftn .inc
build.prop{class, file-ext.h} = .h
build.prop{class, file-ext.o} = .o
build.prop{class, file-ext.script} = 
build.prop{class, file-name-option.f90-mod} = 
build.prop{class, file-she.script} = 
build.prop{class, ignore-missing-dep-ns} = 
build.prop{class, keep-lib-o} = 
build.prop{class, ld} = 
build.prop{class, no-dep.bin} = 
build.prop{class, no-dep.f.module} = 
build.prop{class, no-dep.include} = 
build.prop{class, no-dep.o} = 
build.prop{class, no-dep.o.special} = 
build.prop{class, no-inherit-source} = 
build.prop{class, no-inherit-target-category} = bin etc lib
build.prop{class, no-step-source} = 
build.prop{class, ns-dep.o} = 
build.source = /perm/rd/pas/scm/43r3/scm-43r3.ref-upd/src
build.target{key} = master1c.exe
build.target{task} = 
build.prop{cc} = gcc
build.prop{cc.defs} = BLAS LITTLE LINUX _ABI64
build.prop{cc.flags} = -O -I/usr/local/apps/eccodes/2.12.5/GNU/7.3.0/include 
build.prop{fc} = gfortran
build.prop{fc.defs} = BLAS LITTLE LINUX
build.prop{fc.flags} = -g -O0 -m64 -march=native -ffpe-trap=invalid,zero,overflow -fdump-core  -ffree-line-length-none -finit-real=snan -fcheck=bounds -finit-real=snan -finit-integer=-9999 -finit-logical=false -fconvert=big-endian -fbacktrace -I/usr/local/apps/eccodes/2.12.5/GNU/7.3.0/include  -I/usr/local/apps/netcdf/3.6.3/GNU/7.3.0/include
build.prop{fc.flags-ld} = -L/usr/local/apps/netcdf/3.6.3/GNU/7.3.0/lib -Wl,-rpath,/usr/local/apps/netcdf/3.6.3/GNU/7.3.0/lib -lnetcdf_c++ -lnetcdff -lnetcdf -L/usr/local/apps/eccodes/2.12.5/GNU/7.3.0/lib -Wl,-rpath,/usr/local/apps/eccodes/2.12.5/GNU/7.3.0/lib -leccodes_f90 -leccodes -ljasper -lpthread -llapack -lblas
build.prop{file-ext.f90-interface} = .intfb.h
build.prop{no-dep.f.module} = grib_api ifcore netcdf
build.prop{no-dep.include} = netcdf.inc netcdf.h
build.prop{ns-dep.o}[scmec/source/master1c.F90] = algor crm ifs ifsaux radiation scmec surf
